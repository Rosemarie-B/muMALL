%======================================================%
% Arithmetic theorems using fixed points in ŒºMALL
%======================================================%

% Base case for natural numbers. i.e. nat 0
rec nat_base : (Œ®:ctx) [Œ® ‚ä¢ mu (cons nil (Œº1 (\N.\x. ((x eq zero) ‚äï (‚àÉ\y. ((x eq (suc y)) ‚äó (N y))))) zero)  ùüô)] =
[_ ‚ä¢  mu/Œº1nat upd/t
	(mu/‚äïl upd/t
	   (mu/eq upd/t (exh/c (exh/c (exh/c exh/n hal/0) hal/0) hal/0) nat/refl)
	)
];

% Unfolding nat x once allows us to prove nat 1.
rec nat1 : (Œ®:ctx) [Œ® ‚ä¢ mu (cons nil (Œº1 (\N.\x. ((x eq zero) ‚äï (‚àÉ\y. ((x eq (suc y)) ‚äó (N y))))) (suc zero))  ùüô)] =
[_ ‚ä¢  mu/Œº1nat upd/t
	(mu/‚äïr upd/t
	   (mu/‚àÉ refl upd/t
	      (mu/‚äó upd/t (mg/c (mg/c (mg/c (mg/c mg/n ‚Ä¢/00) ‚Ä¢/00) ‚Ä¢/00) ‚Ä¢/01)
	         (mu/eq upd/t (exh/c (exh/c (exh/c (exh/c (exh/c exh/n hal/0) hal/0) hal/0) hal/0) hal/0) nat/refl)
	         (mu/Œº1nat upd/t
		    (mu/‚äïl upd/t
		       (mu/eq upd/t (exh/c (exh/c (exh/c (exh/c (exh/c (exh/c (exh/c exh/n hal/0) hal/0) hal/0) hal/0) hal/0) hal/0) hal/0) nat/refl)
		    )
		 )
              )
	   )
	)
];

% Base case for even. i.e. even 0
rec even_base : (Œ®:ctx) [Œ® ‚ä¢ mu (cons nil (Œº1 (\E.\x. ((x eq zero) ‚äï (‚àÉ\y. ((x eq (suc(suc y))) ‚äó (E y))))) (zero))  ùüô)] =
[_ ‚ä¢ mu/Œº1even upd/t
	(mu/‚äïl upd/t
	   (mu/eq upd/t (exh/c (exh/c (exh/c exh/n hal/0) hal/0) hal/0) nat/refl)
	)
];

% 2 is even
rec even2 : (Œ®:ctx) [Œ® ‚ä¢ mu (cons nil (Œº1 (\E.\x. ((x eq zero) ‚äï (‚àÉ\y. ((x eq (suc(suc y))) ‚äó (E y))))) (suc(suc zero)))  ùüô)] =
[_ ‚ä¢ mu/Œº1even upd/t
	(mu/‚äïr upd/t
	   (mu/‚àÉ refl upd/t
	      (mu/‚äó upd/t (mg/c (mg/c (mg/c (mg/c mg/n ‚Ä¢/00) ‚Ä¢/00) ‚Ä¢/00) ‚Ä¢/01)
	         (mu/eq upd/t (exh/c (exh/c (exh/c (exh/c (exh/c exh/n hal/0) hal/0) hal/0) hal/0) hal/0) nat/refl)
	         (mu/Œº1even upd/t
		    (mu/‚äïl upd/t
		       (mu/eq upd/t (exh/c (exh/c (exh/c (exh/c (exh/c (exh/c (exh/c exh/n hal/0) hal/0) hal/0) hal/0) hal/0) hal/0) hal/0) nat/refl)
		    )
		 )
              )
	   )
	)
];

% ‚àÄ\a. a ‚â§ a
rec leq_reflexive : (Œ®:ctx) [Œ® ‚ä¢ mu (cons nil (‚àÄ\a. (Œº2 (\L.\x.\y. ((x eq y) ‚äï (‚àÉ\y'. ((y eq (suc y')) ‚äó (L x y'))))) a a ))  ùüô)] =
[_ ‚ä¢ mu/‚àÄ upd/t
       (\a. (mu/Œº2leq upd/t
	  (mu/‚äïl upd/t
	     (mu/eq upd/t (exh/c (exh/c (exh/c (exh/c exh/n hal/0) hal/0) hal/0) hal/0) nat/refl)
	  )
       ))
];

% 4 ‚â§ 5
rec leq45 : (Œ®:ctx) [Œ® ‚ä¢ mu (cons nil (Œº2 (\L.\x.\y. ((x eq y) ‚äï (‚àÉ\y'. ((y eq (suc y')) ‚äó (L x y'))))) (suc(suc(suc(suc zero)))) (suc(suc(suc(suc(suc zero))))))  ùüô)] =
[_ ‚ä¢ mu/Œº2leq upd/t
       (mu/‚äïr upd/t
	  (mu/‚àÉ refl upd/t
	     (mu/‚äó upd/t (mg/c (mg/c (mg/c (mg/c mg/n ‚Ä¢/00) ‚Ä¢/00) ‚Ä¢/00) ‚Ä¢/01)
	         (mu/eq upd/t (exh/c (exh/c (exh/c (exh/c (exh/c exh/n hal/0) hal/0) hal/0) hal/0) hal/0) nat/refl)
	         (mu/Œº2leq upd/t
		    (mu/‚äïl upd/t
		       (mu/eq upd/t (exh/c (exh/c (exh/c (exh/c (exh/c (exh/c (exh/c exh/n hal/0) hal/0) hal/0) hal/0) hal/0) hal/0) hal/0) nat/refl)
		    )
		 )
              )
	   )
	)
];

% half of 2 is 1
rec half21 : (Œ®:ctx)
	     [Œ® ‚ä¢ mu (cons nil (Œº2 (\H.\x.\h. ((x eq zero) ‚äï (x eq (suc zero))) ‚äó (h eq zero) ‚äï (‚àÉ\x'.‚àÉ\h'. (x eq (suc(suc x'))) ‚äó (h eq (suc h')) ‚äó (H x' h'))) (suc(suc zero)) (suc zero))  ùüô)] =
[_ ‚ä¢ mu/Œº2half upd/t
       (mu/‚äïr upd/t
	  (mu/‚àÉ refl upd/t
	     (mu/‚àÉ refl upd/t
		(mu/‚äó upd/t (mg/c (mg/c (mg/c (mg/c (mg/c mg/n ‚Ä¢/00) ‚Ä¢/00) ‚Ä¢/00) ‚Ä¢/00) ‚Ä¢/01)
		    (mu/‚äó upd/t (mg/c (mg/c (mg/c (mg/c (mg/c (mg/c mg/n ‚Ä¢/00) ‚Ä¢/00) ‚Ä¢/00) ‚Ä¢/00) ‚Ä¢/00) ‚Ä¢/01)
		       (mu/eq upd/t (exh/c (exh/c (exh/c (exh/c (exh/c (exh/c (exh/c exh/n hal/0) hal/0) hal/0) hal/0) hal/0) hal/0) hal/0) nat/refl)
		       (mu/eq upd/t (exh/c (exh/c (exh/c (exh/c (exh/c (exh/c (exh/c exh/n hal/0) hal/0) hal/0) hal/0) hal/0) hal/0) hal/0) nat/refl)
		    )
		    (mu/Œº2half upd/t
		       (mu/‚äïl upd/t
			  (mu/‚äó upd/t (mg/c (mg/c (mg/c (mg/c (mg/c (mg/c (mg/c (mg/c mg/n ‚Ä¢/00) ‚Ä¢/00) ‚Ä¢/00) ‚Ä¢/00) ‚Ä¢/00) ‚Ä¢/00) ‚Ä¢/00) ‚Ä¢/01)
			     (mu/‚äïl upd/t
			        (mu/eq upd/t (exh/c (exh/c (exh/c (exh/c (exh/c (exh/c (exh/c (exh/c (exh/c (exh/c exh/n hal/0) hal/0) hal/0) hal/0) hal/0) hal/0) hal/0) hal/0) hal/0) hal/0) nat/refl)
			     )
			     (mu/eq upd/t (exh/c (exh/c (exh/c (exh/c (exh/c (exh/c (exh/c (exh/c (exh/c exh/n hal/0) hal/0) hal/0) hal/0) hal/0) hal/0) hal/0) hal/0) hal/0) nat/refl)
                          )
		       )
		    )
		 )
              )
	   )
	)
];

% 0 + 0 = 0
rec addition_base : (Œ®:ctx) [Œ® ‚ä¢ mu (cons nil (Œº3 (\P.\x.\y.\u. ((x eq zero) ‚äó (y eq u)) ‚äï (‚àÉ\x'.‚àÉ\u'. (x eq (suc x')) ‚äó (u eq (suc u')) ‚äó (P x' y u'))) zero zero zero) ùüô)] =
[_ ‚ä¢ mu/Œº3plus upd/t
       (mu/‚äïl upd/t
	  (mu/‚äó upd/t (mg/c (mg/c (mg/c mg/n ‚Ä¢/00) ‚Ä¢/00) ‚Ä¢/01)
	      (mu/eq upd/t (exh/c (exh/c (exh/c (exh/c exh/n hal/0) hal/0) hal/0) hal/0) nat/refl)
	      (mu/eq upd/t (exh/c (exh/c (exh/c (exh/c exh/n hal/0) hal/0) hal/0) hal/0) nat/refl)
          )
       )
];

% ‚àÄ\a. 0 + a = a
rec addition_identity : (Œ®:ctx) [Œ® ‚ä¢ mu (cons nil (‚àÄ\a.(Œº3 (\P.\x.\y.\u. ((x eq zero) ‚äó (y eq u)) ‚äï (‚àÉ\x'.‚àÉ\u'. (x eq (suc x')) ‚äó (u eq (suc u')) ‚äó (P x' y u'))) zero a a)) ùüô)] =
[_ ‚ä¢ mu/‚àÄ upd/t
       (\a. (mu/Œº3plus upd/t
	  (mu/‚äïl upd/t
	     (mu/‚äó upd/t (mg/c (mg/c (mg/c (mg/c mg/n ‚Ä¢/00) ‚Ä¢/00) ‚Ä¢/00) ‚Ä¢/01)
	        (mu/eq upd/t (exh/c (exh/c (exh/c (exh/c (exh/c exh/n hal/0) hal/0) hal/0) hal/0) hal/0) nat/refl)
	        (mu/eq upd/t (exh/c (exh/c (exh/c (exh/c (exh/c exh/n hal/0) hal/0) hal/0) hal/0) hal/0) nat/refl)
             )
          )
       ))
];

% ‚àÉ\n. 1 + 1 = n ‚äó nat n
rec addition_verification : (Œ®:ctx) [Œ® ‚ä¢ mu (cons nil (‚àÉ\n. (Œº3 (\P.\x.\y.\u. ((x eq zero) ‚äó (y eq u)) ‚äï (‚àÉ\x'.‚àÉ\u'. (x eq (suc x')) ‚äó (u eq (suc u')) ‚äó (P x' y u'))) (suc zero) (suc zero) n ) ‚äó (Œº1 (\N.\x. ((x eq zero) ‚äï (‚àÉ\y. ((x eq (suc y)) ‚äó (N y))))) n )) ùüô)] =
[_ ‚ä¢ mu/‚àÉ refl upd/t
       (mu/‚äó upd/t (mg/c (mg/c mg/n ‚Ä¢/00) ‚Ä¢/01)
          (mu/Œº3plus upd/t
	     (mu/‚äïr upd/t
		(mu/‚àÉ refl upd/t
		   (mu/‚àÉ refl upd/t 
		      (mu/‚äó upd/t (mg/c (mg/c (mg/c (mg/c (mg/c (mg/c (mg/c mg/n ‚Ä¢/00) ‚Ä¢/00) ‚Ä¢/00) ‚Ä¢/00) ‚Ä¢/00) ‚Ä¢/00) ‚Ä¢/01)
		         (mu/‚äó upd/t (mg/c (mg/c (mg/c (mg/c (mg/c (mg/c (mg/c (mg/c mg/n ‚Ä¢/00) ‚Ä¢/00) ‚Ä¢/00) ‚Ä¢/00) ‚Ä¢/00) ‚Ä¢/00) ‚Ä¢/00) ‚Ä¢/01)
			    (mu/eq upd/t (exh/c (exh/c (exh/c (exh/c (exh/c (exh/c (exh/c (exh/c (exh/c exh/n hal/0) hal/0) hal/0) hal/0) hal/0) hal/0) hal/0) hal/0) hal/0) nat/refl)
			    (mu/eq upd/t (exh/c (exh/c (exh/c (exh/c (exh/c (exh/c (exh/c (exh/c (exh/c exh/n hal/0) hal/0) hal/0) hal/0) hal/0) hal/0) hal/0) hal/0) hal/0) nat/refl)

			 )
			 (mu/Œº3plus upd/t
			    (mu/‚äïl upd/t
			       (mu/‚äó upd/t (mg/c (mg/c (mg/c (mg/c (mg/c (mg/c (mg/c (mg/c (mg/c (mg/c mg/n ‚Ä¢/00) ‚Ä¢/00) ‚Ä¢/00) ‚Ä¢/00) ‚Ä¢/00) ‚Ä¢/00) ‚Ä¢/00) ‚Ä¢/00) ‚Ä¢/00) ‚Ä¢/01)
				  (mu/eq upd/t (exh/c (exh/c (exh/c (exh/c (exh/c (exh/c (exh/c (exh/c (exh/c (exh/c (exh/c exh/n hal/0) hal/0) hal/0) hal/0) hal/0) hal/0) hal/0) hal/0) hal/0) hal/0) hal/0) nat/refl)
				  (mu/eq upd/t (exh/c (exh/c (exh/c (exh/c (exh/c (exh/c (exh/c (exh/c (exh/c (exh/c (exh/c exh/n hal/0) hal/0) hal/0) hal/0) hal/0) hal/0) hal/0) hal/0) hal/0) hal/0) hal/0) nat/refl)
			       )
			    )
			 )
		      )

		   )

		)

	     )
	  )
	  (mu/Œº1nat upd/t
	     (mu/‚äïr upd/t
		(mu/‚àÉ refl upd/t
		   (mu/‚äó upd/t (mg/c (mg/c (mg/c (mg/c (mg/c (mg/c mg/n ‚Ä¢/00) ‚Ä¢/00) ‚Ä¢/00) ‚Ä¢/00) ‚Ä¢/00) ‚Ä¢/01)
	              (mu/eq upd/t (exh/c (exh/c (exh/c (exh/c (exh/c (exh/c (exh/c exh/n hal/0) hal/0) hal/0) hal/0) hal/0) hal/0) hal/0) nat/refl)
	              (mu/Œº1nat upd/t
			 (mu/‚äïr upd/t
			    (mu/‚àÉ refl upd/t
			       (mu/‚äó upd/t (mg/c (mg/c (mg/c (mg/c (mg/c (mg/c (mg/c (mg/c (mg/c (mg/c mg/n ‚Ä¢/00) ‚Ä¢/00) ‚Ä¢/00) ‚Ä¢/00) ‚Ä¢/00) ‚Ä¢/00) ‚Ä¢/00) ‚Ä¢/00) ‚Ä¢/00) ‚Ä¢/01)
			          (mu/eq upd/t (exh/c (exh/c (exh/c (exh/c (exh/c (exh/c (exh/c (exh/c (exh/c (exh/c (exh/c exh/n hal/0) hal/0) hal/0) hal/0) hal/0) hal/0) hal/0) hal/0) hal/0) hal/0) hal/0) nat/refl)
				  (mu/Œº1nat upd/t
				     (mu/‚äïl upd/t
					(mu/eq upd/t (exh/c (exh/c (exh/c (exh/c (exh/c (exh/c (exh/c (exh/c (exh/c (exh/c (exh/c (exh/c (exh/c exh/n hal/0) hal/0) hal/0) hal/0) hal/0) hal/0) hal/0) hal/0) hal/0) hal/0) hal/0) hal/0) hal/0) nat/refl)
				     )
				  )
			       )
			    )
			 )
		      )
		   )
		)
	     )
	  )
       )
];
